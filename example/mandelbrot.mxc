fn mandelbrot(cx, cy: float, n: int): float {
    let {
        xn = 0.0;
        yn = 0.0;
        xn_1 = 0.0;
        yn_1 = 0.0;
        i = 0;
    }

    while i < n {
        xn_1 = xn * xn - (yn * yn) + cx;
        yn_1 = 2.0 * xn * yn + cy;

        let t = xn_1 * xn_1 + yn_1 * yn_1;

        if t > 4.0 {
            return t;
        }
        else {
            xn = xn_1;
            yn = yn_1;
        }

        i = i + 1;
    }

    return 0.0;
}

let {
    x_max = 2.0;
    x_min = -2.0;
    y_max = 1.0;
    y_min = -1.0;
    dx = 0.01;
    dy = 0.015;
    x = 0.0;
}

let t = 0.0;

let y = y_max;
while y > y_min {
    x = x_min;
    while x < x_max {
        t = x.mandelbrot(y, 300);

        if t > 8.0 { "#".print; }
        else if t > 6.0 { "*".print; }
        else if t > 4.0 { ".".print; }
        else { " ".print; }

        x = x + dx;
    }

    "".println;
    y = y - dy;
}

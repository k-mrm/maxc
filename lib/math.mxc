let {
    PI = 3.1415926535897932385;
    E = 2.7182818284590452353;
}

// *は未実装
// 三角関数
// sin(), cos(), tan(), asin(), acos(), atan()

// 双曲線関数
// *sinh(), *cosh(), *tanh(), *asinh(), *acosh(), *atanh()

// 指数関数, 対数関数
// *exp(), *exp2(), *log(), *log10(), *log2()

// 仮数, 指数
// ldexp(), *frexp(), *modf()

// 累乗, 冪根, 絶対値

// pow(), sqrt(), cbrt(), hypot(), abs()
def pow(x: int, n: int): int {
    let result = 1;
    while n > 1 {
        let {
            n2 = n / 2;
            i = n - (2 * n2);
        }
        if i > 0 {
            result = result * x;
        }
        x = x * x;
        n = n2;
    }
    return result * x;
}


def sqrt(x: float): float {
    if x < 0.0 || x == 0.0 {
        return 0.0;
    }
    else {
        return n;
    }
}

fn floor(x: float): int {
    let n = toint(x);
    if tofloat(n) > x {
        return n - 1;
    }
    else {
        return n;
    }
}

def abs(i: int) = if i >= 0 i else -i;

// 最近傍整数
// ceil(), floor()

// 剰余
// fmod()

// 線形補間
// lerp()
def lerp(a: float, b: float, t: float) = a + t * (b - a);
